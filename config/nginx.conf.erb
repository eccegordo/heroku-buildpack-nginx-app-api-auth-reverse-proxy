daemon off;
# Heroku dynos have at least 4 cores
worker_processes <%= ENV['NGINX_WORKERS'] || 4 %>;

# Make work with Heroku SSL
# https://help.heroku.com/YTWRHLVH/how-do-i-make-my-nginx-proxy-connect-to-a-heroku-app-behind-heroku-ssl

events {
    use epoll;
    accept_mutex on;
    worker_connections <%= ENV['NGINX_WORKER_CONNECTIONS'] || 1024 %>;
}

http {
    gzip on;
    gzip_comp_level 2;
    gzip_min_length 512;
    server_tokens off;

    log_format main '$time_iso8601 - $status $request - client IP: $http_x_forwarded_for - to $upstream_addr - upstream status: $upstream_status, upstream_response_time $upstream_response_time, request_time $request_time';
    access_log /dev/stdout main;
    # set the following to "debug" when diagnosing an issue
    error_log /dev/stdout notice;
    log_not_found on;

    include mime.types;
    default_type application/octet-stream;
    sendfile on;

    # Must read the body in 5 seconds.
    client_body_timeout <%= ENV['NGINX_CLIENT_BODY_TIMEOUT'] || 5 %>;

    # handle SNI
    proxy_ssl_server_name on;
    # resolver needs to be set because we're using dynamic proxy_pass
    resolver 8.8.8.8;

  <% if ENV["APP_SERVER"] %>
    upstream upstream_app_server {
        server <% ENV["APP_SERVER_SUBDOMAIN"] %>.herokuapp.com:443;
    }
  <% end %>

  <% if ENV["AUTH_SERVER"] %>
    upstream upstream_auth_server {
        server <% ENV["AUTH_SERVER_SUBDOMAIN"] %>.herokuapp.com:443;
    }
  <% end %>

  <% if ENV["API_SERVER"] %>
    upstream upstream_api_server {
        server <% ENV["API_SERVER_SUBDOMAIN"] %>.herokuapp.com:443;
    }
  <% end %>

    server {
        listen <%= ENV["PORT"] %>;
        server_name _;
        root <%= ENV["ROOT_DIRECTORY"] || 'html' %>;

        <% if ENV["FORCE_HTTPS"] %>
          if ( $http_x_forwarded_proto != 'https' ) {
            return 301 https://$host$request_uri;
          }
        <% end %>    

        <% if ENV["BASIC_AUTH_USER"] && ENV["BASIC_AUTH_PASSWORD"] %>
          auth_basic "Restricted";
          auth_basic_user_file <%= "#{ENV["HOME"]}/config/htpasswd" %>;
        <% end %>

        location / {
          expires off;
          try_files $uri $uri/ <%= ENV["REDIRECT_NOT_FOUND_TO"] || '' %> =404;
          <% if ENV["NGINX_DEBUG"] %>add_header Nginx-Base-Location on;<% end %>
        }

      <% if ENV["APP_SERVER"] %>
        location <% ENV["API_SERVER_PATH"] %>  {
            set $upstream upstream_app_server;
            proxy_pass https://$upstream;
            proxy_ssl_name <% ENV["APP_SERVER_SUBDOMAIN"] %>.herokuapp.com;
            proxy_set_header x-forwarded-host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host <% ENV["APP_SERVER_SUBDOMAIN"] %>.herokuapp.com;
        }
      <% end %>

      <% if ENV["AUTH_SERVER"] %>
        location <% ENV["AUTH_SERVER_PATH"] %>  {
            set $upstream upstream_auth_server;
            proxy_pass https://$upstream;
            proxy_ssl_name <% ENV["AUTH_SERVER_SUBDOMAIN"] %>.herokuapp.com;
            proxy_set_header x-forwarded-host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host <% ENV["AUTH_SERVER_SUBDOMAIN"] %>.herokuapp.com;
        }
      <% end %>

      <% if ENV["API_SERVER"] %>
        location <% ENV["API_SERVER_PATH"] %>  {
            set $upstream upstream_api_server;
            proxy_pass https://$upstream;
            proxy_ssl_name <% ENV["API_SERVER_SUBDOMAIN"] %>.herokuapp.com;
            proxy_set_header x-forwarded-host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host <% ENV["API_SERVER_SUBDOMAIN"] %>.herokuapp.com;
        }
      <% end %>
    }
}


